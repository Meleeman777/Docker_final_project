version: "3.4"
name: rbmdkrfinalapp
services:
  postgres:
    image: postgres:9.6.3
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./results/telemetry_postgresql.sql:/docker-entrypoint-initdb.d/telemetry_postgresql.sql
    environment:
      POSTGRES_PASSWORD: speedtest
      POSTGRES_USER: speedtest
      POSTGRES_HOSTNAME: postgres
      POSTGRES_DB: speedtest
    networks:
      - traefik-public
  librespeed:
    build: .
    depends_on:
      - postgres
    env_file:
      - speed.env
    ports:
      - 80:80
    networks:
      - traefik-public
    logging:
      driver: "fluentd"
      options:
        fluentd-async-connect: "true"
        tag: app
    volumes:
      - $PWD/docker/servers.json:/servers.json
    deploy:
     labels:
       - "traefik.enable=true"
       - "traefik.http.routers.librespeed.rule=Host(`librespeed.159.253.18.53.nip.io`)"
       - "traefik.http.routers.librespeed.entrypoints=web"
       - "traefik.http.services.librespeed.loadbalancer.server.port=80"
  traefik:
    image: traefik:v2.0
    ports:
      - 8080:8080
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.network=traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-public
    deploy:
      labels:
        - "traefik.http.routers.api.rule=Host(`traefik.159.253.18.53.nip.io`)"
    logging:
      driver: "fluentd"
      options:
        fluentd-async-connect: "true"
        tag: traefik

networks:
  traefik-public:
volumes:
  pgdata:

